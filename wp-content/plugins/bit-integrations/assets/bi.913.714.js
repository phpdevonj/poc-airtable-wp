var I=Object.defineProperty;var _=Object.getOwnPropertySymbols;var k=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var y=(a,e,t)=>e in a?I(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,l=(a,e)=>{for(var t in e||(e={}))k.call(e,t)&&y(a,t,e[t]);if(_)for(var t of _(e))b.call(e,t)&&y(a,t,e[t]);return a};import{_ as o,c as p,B as A,t as F}from"./bi.738.82.js";const z=(a,e,t,r,c,n,i,s,d)=>{let u=l({},e);if(i){const g=l({},s);g[a.target.name]="",d(l({},g))}switch(u[a.target.name]=a.target.value,a.target.name){case"listId":u=$(u,r,t,c,n);break}t(l({},u))},M=a=>!((a!=null&&a.address_field?a.address_field.filter(t=>!t.formField&&t.mailChimpAddressField&&t.required):[]).length>0),$=(a,e,t,r,c)=>{var i,s;const n=A(a);return n.field_map=[{formField:"",mailChimpField:""}],(s=(i=n==null?void 0:n.default)==null?void 0:i.fields)!=null&&s[a.listId]||(D(e,n,t,r,c),R(e,n,t,r,c)),n},P=(a,e,t,r,c)=>{r(!0);const n={formID:a,clientId:e.clientId,clientSecret:e.clientSecret,tokenDetails:e.tokenDetails};p(n,"mChimp_refresh_audience").then(i=>{if(i&&i.success){const s=l({},e);s.default||(s.default={}),i.data.audiencelist&&(s.default.audiencelist=i.data.audiencelist),i.data.tokenDetails&&(s.tokenDetails=i.data.tokenDetails),c({show:!0,msg:o("Audience list refreshed","bit-integrations")}),t(l({},s))}else i&&i.data&&i.data.data||!i.success&&typeof i.data=="string"?c({show:!0,msg:F(o("Audience list refresh failed Cause: %s. please try again","bit-integrations"),i.data.data||i.data)}):c({show:!0,msg:o("Audience list failed. please try again","bit-integrations")});r(!1)}).catch(()=>r(!1))},D=(a,e,t,r,c)=>{r(!0);const n={formID:a,clientId:e.clientId,clientSecret:e.clientSecret,tokenDetails:e.tokenDetails,listId:e.listId};p(n,"mChimp_refresh_tags").then(i=>{if(i&&i.success){const s=l({},e);i.data.audienceTags&&(s.default.audienceTags=i.data.audienceTags),c({show:!0,msg:o("Audience tags refreshed","bit-integrations")}),t(l({},s))}else i&&i.data&&i.data.data||!i.success&&typeof i.data=="string"?c({show:!0,msg:F(o("Audience tags refresh failed Cause: %s. please try again","bit-integrations"),i.data.data||i.data)}):c({show:!0,msg:o("Audience tags failed. please try again","bit-integrations")});r(!1)}).catch(()=>r(!1))},R=(a,e,t,r,c)=>{const{listId:n}=e;if(!n)return;r(!0);const i={formID:a,listId:n,clientId:e.clientId,clientSecret:e.clientSecret,tokenDetails:e.tokenDetails};p(i,"mChimp_refresh_fields").then(s=>{if(s&&s.success){const d=l({},e);s.data.audienceField&&(d.default.fields||(d.default.fields={}),d.default.fields[n]=s.data.audienceField),s.data.tokenDetails&&(d.tokenDetails=s.data.tokenDetails),c({show:!0,msg:o("Fields refreshed","bit-integrations")}),t(l({},d))}else c({show:!0,msg:o("Fields refresh failed. please try again","bit-integrations")});r(!1)}).catch(()=>r(!1))},C=a=>{const e={},r=window.location.href.replace(`${window.opener.location.href}`,"").split("&");r&&r.forEach(c=>{const n=c.split("=");n[1]&&(e[n[0]]=n[1])}),localStorage.setItem(`__${a}`,JSON.stringify(e)),window.close()},E=(a,e,t,r,c,n,i,s)=>{if(!t.clientId||!t.clientSecret){c({clientId:t.clientId?"":o("Client ID cann't be empty","bit-integrations"),clientSecret:t.clientSecret?"":o("Secret key cann't be empty","bit-integrations")});return}i(!0);const d=`https://login.mailchimp.com/oauth2/authorize?client_id=${t.clientId}&redirect_uri=${encodeURIComponent(window.location.href)}&response_type=code`,u=window.open(d,a,"width=400,height=609,toolbar=off"),g=setInterval(()=>{if(u.closed){clearInterval(g);let f={},m=!1;const w=localStorage.getItem(`__${a}`);if(w&&(m=!0,f=JSON.parse(w),localStorage.removeItem(`__${a}`),f.code.search("#"))){const[h]=f.code.split("#");f.code=h}if(!f.code||f.error||!f||!m){const h=f.error?`Cause: ${f.error}`:"";s({show:!0,msg:`${o("Authorization failed","bit-integrations")} ${h}. ${o("please try again","bit-integrations")}`}),i(!1)}else{const h=l({},t);h.accountServer=f["accounts-server"],q(e,f,h,r,n,i,s)}}},500)},q=(a,e,t,r,c,n,i)=>{const s=l({},e);s.clientId=t.clientId,s.clientSecret=t.clientSecret,s.redirectURI=window.location.href,p(s,`${a}_generate_token`).then(d=>d).then(d=>{if(d&&d.success){const u=l({},t);u.tokenDetails=d.data,r(u),c(!0),i({show:!0,msg:o("Authorized Successfully","bit-integrations")})}else d&&d.data&&d.data.data||!d.success&&typeof d.data=="string"?i({show:!0,msg:`${o("Authorization failed Cause:","bit-integrations")}${d.data.data||d.data}. ${o("please try again","bit-integrations")}`}):i({show:!0,msg:o("Authorization failed. please try again","bit-integrations")});n(!1)})},U=a=>!((a.field_map?a.field_map.filter(t=>!t.formField&&!t.mailChimpField):[]).length>0);export{D as a,E as b,M as c,U as d,z as h,P as r,C as s};
